# before_script:
stages:
  - build
  - test
  - analyze
  - migrate
  - deploy

build:
  stage: build
  script:
    - echo $CI_COMMIT_SHORT_SHA
    - sed -i "s@__IMAGE_TAG__@$CI_COMMIT_SHORT_SHA@g" docker-compose.yml
    - docker-compose build --no-cache
    - docker push registry.gitlab.com/freeyeti/antarctic-map:$CI_COMMIT_SHORT_SHA
  only:
    - master
  tags:
    - build
    - shell

test-backend:
  stage: test
  script:
    # With docker-compose
    # - docker-compose -f docker-compose.test.yml run antarctic_map_test
    # - docker-compose -f docker-compose.test.yml down
    #
    # In kubernetes
    - echo $CI_COMMIT_SHORT_SHA
    - sed -i "s@__ANTARCTIC_MAP_GIS_DATA__@$ANTARCTIC_MAP_GIS_DATA@g" deployment.test.yml
    - sed -i "s@__ANTARCTIC_MAP_WWW_DATA__@$ANTARCTIC_MAP_WWW_DATA@g" deployment.test.yml
    - sed -i "s@__IMAGE_TAG__@$CI_COMMIT_SHORT_SHA@g" deployment.test.yml
    - microk8s kubectl apply -f deployment.test.yml
    - microk8s kubectl wait --timeout=600s --for=condition=complete job/antarctic-map-test
    - microk8s kubectl logs -f jobs/antarctic-map-test
    - microk8s kubectl delete -f deployment.test.yml
  only:
    - master
  tags:
    - build
    - shell

analyze:
  stage: analyze
  script:
    - echo $CI_COMMIT_SHORT_SHA
    - CI=true dive registry.gitlab.com/freeyeti/antarctic-map:$CI_COMMIT_SHORT_SHA
  only:
    - master
  tags:
    - build
    - shell

migrate:
  stage: migrate
  script:
    # Use system python
    # - export PATH="/home/gitlab-runner/.local/bin:$PATH"
    # - export DJANGO_SETTINGS_MODULE="map.settings_docker_build"
    # - pip3 install -U pip
    # - pip3 install --no-cache -r requirements.txt
    # - python3 manage.py migrate

    # In kubernetes
    - echo $CI_COMMIT_SHORT_SHA
    - sed -i "s@__IMAGE_TAG__@$CI_COMMIT_SHORT_SHA@g" deployment.migrate.yml
    - microk8s kubectl apply -f deployment.migrate.yml
    - microk8s kubectl wait --timeout=300s --for=condition=complete jobs/antarctic-map-migrate
    - microk8s kubectl logs -f jobs/antarctic-map-migrate
    - microk8s kubectl delete -f deployment.migrate.yml
  only:
    - master
  tags:
    - deploy
    - shell

deploy_prod:
  stage: deploy
  script:
    # - docker-compose up --force-recreate -d
    # - docker container prune -f
    # - docker image prune -a -f
    #
    # In kubernetes
    - sed -i "s@__ANTARCTIC_MAP_GIS_DATA__@$ANTARCTIC_MAP_GIS_DATA@g" deployment.yml
    - sed -i "s@__ANTARCTIC_MAP_WWW_DATA__@$ANTARCTIC_MAP_WWW_DATA@g" deployment.yml
    - sed -i "s@__IMAGE_TAG__@$CI_COMMIT_SHORT_SHA@g" deployment.yml
    - microk8s kubectl apply -f deployment.yml
    - docker container prune -f
    - docker image prune -a -f
    - echo $CI_COMMIT_SHORT_SHA
  environment:
    name: production
  only:
    - master
  tags:
    - deploy
    - shell
